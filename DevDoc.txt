
Program that can help import/export/manage various reports. For example time reports for work or milage journals.

File ext:
	.repcs (Report Command Script)


Console application usage:
	Reportz.exe Run -script 'TimeReport.repcs' -scriptname ProjectPlace



Interfaces:
	IExecutable.cs
		ExeResult Execute(ExeArgs args)

	IExecutor.cs
		ExeResult Execute(ExeArgs args)

	IProvider.cs : IExecutable

	IFormatter.cs : IExecutable
		
	IVariable.cs
		string Key
		Object Value
		Type Type



"Report Command script" syntax:

<script name="ProjectPlace">													(IScript : IExecutable)
	<variables>																	(IExecutorEnvironmentInit)
		<provider name="TimeReportExtractor">									(IProvider)
			<type>Reportz.Plugin.ProjectPlace.TimeReportExtractor</type>
			<ctor>
				<arguments>														(Add/Remove Collection)
				</arguments>
			</ctor>
			<properties>														(Add/Remove Collection)
				<add key="username" type="string">{username}</add>
				<add key="password" type="string">{password}</add>
				<add key="url" type="string"></add>
			</properties>
		</provider>
		<formatter name="JsonToCsvFormatter">									(IFormatter)
			<type>Reportz.Plugin.ProjectPlace.TimeReportJsonToCsvFormatter</type>
			<ctor>
				<arguments>														(Add/Remove Collection)
				</arguments>
			</ctor>
			<properties>														(Add/Remove Collection)
				<add key="username" type="string">{username}</add>					(AddVariable : IVariable)
				<add key="password" type="string">{password}</add>					(AddVariable : IVariable)
				<add key="url" type="string"></add>									(AddVariable : IVariable)
			</properties>
		</formatter>
	</variables>

	<execute>																	(IExecutorEnvironment)
		<variable key="startDate" type="DateTime">2017-01-01</variable>			(IExecutor)

		<run-executable name="TimeReportExtractor">								(IExecutor)
			<arguments>															(Add/Remove Collection)
				<add key="startDate" var="$startDate" />							(AddVariable : IVariable)
				<add key="endDate" type="DateTime">2017-01-15</add>					(AddVariable : IVariable)
			</arguments>
			<events>															(Collection<IEvent>)
				<event key="error">												(IEvent, IExecutorEnvironment)
					<alert>Something went wrong!! Error message: $$Exception.Message</alert>
				</event>
				<event key="completed">											(IEvent, IExecutorEnvironment)
					<variable key="json">$$Result</variable>					(Variable : IVariable)
				</event>
			</events>
		</run-executable>

		<run-executable name="JsonToCsvFormatter">								(IExecutor)
			<arguments>															(Add/Remove Collection)
				<add key="json" var="$json" />										(AddVariable : IVariable)
			</arguments>
			<events>															(Collection<IEvent>)
				<event key="error">												(IEvent, IExecutorEnvironment)
					<alert>Something went wrong!! Error message: $$Exception.Message</alert>
				</event>
				<event key="completed">											(IEvent, IExecutorEnvironment)
					<variable key="csv">$$Result</variable>						(Variable : IVariable)
				</event>
			</events>
		</run-executable>
	</execute>

	<events>															(Collection<IEvent>)
		<event key="error">												(IEvent, IExecutorEnvironment)
			<alert>Something went wrong when running script!! Error message: $$Exception.Message</alert>
		</event>
		<event key="completed">											(IEvent, IExecutorEnvironment)
			
		</event>
	</events>
<script>